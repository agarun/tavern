---

test_name: test dict comparisons

includes:
  - !include common.yaml

stages:
  - name: test_comparisons
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      body:
        an_integer: 123
        $ext:
          function: tavern.testutils.helpers:validate_content
          extra_kwargs:
            comparisons:
              - jmespath: "an_integer"
                operator: "eq"
                expected: 123
              - jmespath: "an_integer"
                operator: "type"
                expected: int
              - jmespath: "a_string"
                operator: "eq"
                expected: abc
              - jmespath: "top.Thing"
                operator: "type"
                expected: str
              - jmespath: "top.nested.doubly.inner"
                operator: "eq"
                expected: value

---

test_name: test list comparisons

includes:
  - !include common.yaml

stages:
  - name: test_comparisons
    request:
      url: "{host}/fake_list"
      method: GET
    response:
      status_code: 200
      body:
        $ext:
          function: tavern.testutils.helpers:validate_content
          extra_kwargs:
            comparisons:
              - jmespath: "[1]"
                operator: "type"
                expected: str
              - jmespath: "[1]"
                operator: "eq"
                expected: b

              - jmespath: "[5]"
                operator: "type"
                expected: int
              - jmespath: "[5]"
                operator: "eq"
                expected: 3

              - jmespath: "[8]"
                operator: "type"
                expected: float
              - jmespath: "[8]"
                operator: "eq"
                expected: -3.0

---

test_name: Test we can save a single value with jmespath

includes:
  - !include common.yaml

stages:
  - name: get item
    request:
      url: "{host}/get_single_json_item"
      method: GET
    response:
      status_code: 200
      body: c82bfa63-fd2a-419a-8c06-21cb283fd9f7
      save:
        body:
          saved_with_at: "@"

  - name: Echo back the value and it should be as expected
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{saved_with_at}"
    response:
      status_code: 200
      body:
        value: c82bfa63-fd2a-419a-8c06-21cb283fd9f7

---

test_name: Test querying for presence of value

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      body:
        top: !anything
        an_integer: 123
        a_string: abc
      jmespath:
        - query: "top.Thing"

---

test_name: Test not giving a query fails

_xfail: verify

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      jmespath:
        - expected: "value"

---

test_name: Test querying object with an expected value

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      body:
        top: !anything
        an_integer: 123
        a_string: abc
      jmespath:
        - query: "top.Thing"
          expected: "value"

---

test_name: Test querying object and saving

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      jmespath:
        - query: "top.Thing"
          expected: "value"
          save_as: jmes_saved_value

  - &send_saved_value
    name: Post saved value
    request:
      url: "{host}/echo"
      method: POST
      json:
        value: "{jmes_saved_value}"
    response:
      status_code: 200
      body:
        value: "{jmes_saved_value}"

---

test_name: Test querying object and saving without checking the value

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_dictionary"
      method: GET
    response:
      status_code: 200
      jmespath:
        - query: "top.Thing"
          save_as: jmes_saved_value

  - *send_saved_value

# NOTE: Doing expected: !anystr should probably just not be allowed,
# as it is implied by _not_ passing anything
#---
#
#test_name: Test querying object and saving with a typetoken
#
#includes:
#  - !include common.yaml
#
#stages:
#  - name: Query from complex object
#    request:
#      url: "{host}/fake_dictionary"
#      method: GET
#    response:
#      status_code: 200
#      jmespath:
#        - query: "top.Thing"
#          expected: !anystr
#          save_as: jmes_saved_value
#
#  - *send_saved_value

---

test_name: Test querying nested list

includes:
  - !include common.yaml

stages:
  - name: Query from complex object
    request:
      url: "{host}/fake_nested_objects"
      method: GET
    response:
      status_code: 200
      # NOTE: no 'body' for this
      jmespath:
        - query: "a_list[2].nested"
          expected: "value"
        - query: "a_list[2].another_list[0]"
          expected: 1
        - query: "a_list[1]"
          expected: "second"

---

test_name: Test querying list

includes:
  - !include common.yaml

stages:
  - name: Query
    request:
      url: "{host}/fake_list"
      method: GET
    response:
      status_code: 200
      jmespath:
        - query: "[?@ == `3`]"
        - query: "[?@ == `9`]"
          expected: []

---

test_name: Test saving a list fails

includes:
  - !include common.yaml

_xfail: run

stages:
  - name: Query
    request:
      url: "{host}/fake_list"
      method: GET
    response:
      status_code: 200
      jmespath:
        # This will fail because you can't save a list
        - query: "[?@ == `3`]"
          save_as: Blauerhg

---

test_name: Test saving one list element works

includes:
  - !include common.yaml

stages:
  - name: Query
    request:
      url: "{host}/fake_list"
      method: GET
    response:
      status_code: 200
      jmespath:
        - query: "[?@ == `3`] | [0]"
          save_as: Blauerhg

---

test_name: Test saving an object fails

includes:
  - !include common.yaml

_xfail: run

stages:
  - name: Query
    request:
      url: "{host}/fake_nested_objects"
      method: GET
    response:
      status_code: 200
      jmespath:
        # This will fail because you can't save an object
        - query: "top"
          save_as: Blauerhg
